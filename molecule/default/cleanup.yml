---
- name: Cleanup DNS entries
  hosts: all
  gather_facts: false
  vars:
    base_domain: "{{ lookup('ansible.builtin.env', 'BASE_DOMAIN') }}"
  tasks:
    - name: Check a temporary domain was created
      ansible.builtin.stat:
        path: "/tmp/traefik_auth_proxy_molecule/molecule_domain"
      register: domain_file_exists
      delegate_to: localhost

    - name: End play if no temporary domain
      ansible.builtin.meta: end_play
      when: not domain_file_exists.stat.exists
      delegate_to: localhost

    - name: Grab domain name from target
      become: true
      ansible.builtin.slurp:
        src: "/tmp/traefik_auth_proxy_molecule/molecule_domain"
      register: molecule_domain_data_slurped

    - name: Set domain fact
      ansible.builtin.set_fact:
        proxy_domain: "{{ molecule_domain_data_slurped.content | b64decode }}.{{ base_domain }}"

    - name: List DNS entries
      ansible.builtin.command:
        cmd: python3 desec.py --token {{ lookup('ansible.builtin.env', 'DESEC_TOKEN') }} get-records {{ base_domain }}
      register: dns_entry_list
      delegate_to: localhost
      changed_when: false

    - name: Set fact with DNS entries
      ansible.builtin.set_fact:
        dns_entries: "{{ dns_entry_list.stdout_lines | select('match', '.*' + proxy_domain + '.*') }}"

    - name: Remove DNS entries  # noqa no-changed-when
      ansible.builtin.command:
        cmd: python3 desec.py --token {{ lookup('ansible.builtin.env', 'DESEC_TOKEN') }} delete-record {{ base_domain }} -s {{ item.split('.' + base_domain)[0] }} -t {{ item.split(' ')[3] }}
      loop: "{{ dns_entries }}"
      delegate_to: localhost

- name: Cleanup containers
  hosts: all
  gather_facts: false
  tasks:

    - name: Stop demo containers
      community.docker.docker_container:
        name: "authproxy-site-{{ item }}"
        state: absent
      loop:
        - demo
        - secure
        - secure-two
      delegate_to: localhost

    - name: Stop OIDC mock server
      community.docker.docker_container:
        name: traefik_auth_proxy_molecule_oidc
        state: absent
      delegate_to: localhost

    - name: Stop proxy containers
      community.docker.docker_compose:
        project_src: /etc/traefik_proxy
        state: absent
        project_name: traefik_auth_proxy_molecule
        remove_volumes: true
      register: stop_proxy_containers
      # Ignore failures caused by the Compose file not existing.
      failed_when: stop_proxy_containers.failed == true and "Can't find a suitable configuration file" not in stop_proxy_containers.msg
      # Ignore errors because the container doesn't exist
      ignore_unreachable: true

    # Note that Ansible cannot empty a directory without removing it (or iterating the contents), so we have to use the shell
    - name: Remove config files from mounted directory  # noqa no-changed-when
      ansible.builtin.shell: /bin/rm -rf /tmp/traefik_auth_proxy_molecule/*
      args:
        warn: false
      ignore_unreachable: true
